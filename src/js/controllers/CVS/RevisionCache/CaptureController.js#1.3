app.controller("CaptureCtrl", function($scope,vertxEventBusService,actionData,$stateParams,$state){
                      if(sessionStorage.logado=== undefined)
                  {
                      $state.go("Login");
                  }
                  else{
                     //$scope.idSnapshotURL = decodeURIComponent($stateParams.idSnapshot);
                     $scope.SelectedWorkName = decodeURIComponent($stateParams.SelectedWorkName);
//                     $scope.methods = ['AWR','MEMORY','STS','GPSQL'];
//                     $scope.page = "Capture";
                     $scope.refreshPage();
                     /*
                     $scope.changeMethod = function(SelectedMethod){
                         console.log("selectedmethod en changemethod vale " + SelectedMethod);
                         
                         if(SelectedMethod === 'AWR'){
                            $scope.AWRSelected = true;
                             $scope.MEMORYSelected = false;
                             $scope.STSSelected = false;
                             $scope.GPSQLSelected = false;
                              vertxEventBusService.send('snapshot_actions', {VERTX_ACTION: 'select_all', ID_WORK: sessionStorage.SelectedIdWork, ID_SES:sessionStorage.idSesion, ID_CON: (actionData.setIdCon()).toString()});
                               vertxEventBusService.send('repository_actions', {VERTX_ACTION:"select_repodb"}); 
                              
                             $scope.TestConnAWR = function(){
                                 vertxEventBusService.send('oracle_capture_actions', {ID_SES:sessionStorage.idSesion, ID_CON: (actionData.setIdCon()).toString(),VERTX_ACTION:"test_oracle_conn",HOST_NAME:document.getElementById("HOST_NAME").value,PORT:document.getElementById("PORT").value,DB_NAME:document.getElementById("DB_NAME").value,USER_NAME:document.getElementById("USER_NAME").value,PASSWD:document.getElementById("PASSWD").value,ORACLE_SERVICE_SID:document.getElementById("SERVICE").value}); 
                                 //oracle_capture_results
                                 
                                 //console.log("$scope.HOST_NAME vale " + $scope.HOST_NAME);
                                 //console.log("testconawr: " + JSON.stringify({ID_SES:sessionStorage.idSesion, ID_CON: (actionData.setIdCon()).toString(),VERTX_ACTION:"test_oracle_conn",HOST_NAME:document.getElementById("HOST_NAME").value,PORT:document.getElementById("PORT").value,DB_NAME:document.getElementById("DB_NAME").value,USER_NAME:document.getElementById("USER_NAME").value,PASSWD:document.getElementById("PASSWD").value,ORACLE_SERVICE_SID:document.getElementById("SERVICE").value}));
                                //{"ID_SES":"1", "ID_CON":"1", "VERTX_ACTION":"test_oracle_conn", "HOST_NAME":"192.168.1.254", "PORT":"1521", "DB_NAME":"ORCL1", "USER_NAME":"test2","PASSWD":"test2","ORACLE_SERVICE_SID":"SERVICE"}
                                 //vertxEventBusService.send('repository_actions', {VERTX_ACTION:"test_conn",DB_TYPE:document.getElementById("DB_TYPE").value,HOST_NAME:$scope.HOST_NAME,PORT:$scope.PORT,DB_NAME:$scope.DB_NAME,USER_NAME:$scope.USER_NAME,PASSWD:$scope.PASSWD,ORACLE_SERVICE_SID:document.getElementById("SERVICE").value,DEFAULT_REPO:$scope.DEFAULT}); 
                             };
                               
                               
                               
                               
                                $scope.$on('SnapshotsResults', function(ev, args) {
                                    console.log("el snapshotsresults en capturecontroller vale " + args.SnapshotsResults);
                                    $scope.SnapshotsResults = args.SnapshotsResults;
                                    
                                    $scope.filterSecondSnap = function(firstSnap){
                                        console.log("firstSnap en filterSecondSnap vale " + JSON.stringify(firstSnap));

                                            $scope.secondList = $scope.SnapshotsResults.filter(function(el){ return el.ID_SNAPSHOT !== firstSnap.ID_SNAPSHOT; });
                                            console.log("$scope.secondList vale " + JSON.stringify($scope.secondList));
                                    };

                                });
                                
                             //$state.go("CaptureAWR",{SelectedWorkName:$scope.SelectedWorkName});
                         }
                         else if(SelectedMethod === 'MEMORY'){
                             $scope.AWRSelected = false;
                             $scope.MEMORYSelected = true;
                             $scope.STSSelected = false;
                             $scope.GPSQLSelected = false;
                         }
                         else if(SelectedMethod === 'STS'){
                             $scope.AWRSelected = false;
                             $scope.MEMORYSelected = false;
                             $scope.STSSelected = true;
                             $scope.GPSQLSelected = false;
                         }        
                         else if(SelectedMethod === 'GPSQL'){
                             $scope.GPSQLSelected = true;
                             $scope.AWRSelected = false;
                             $scope.MEMORYSelected = false;
                             $scope.STSSelected = false;
                         }          
                         else{
                             $scope.GPSQLSelected = false;
                             $scope.AWRSelected = false;
                             $scope.MEMORYSelected = false;
                             $scope.STSSelected = false;
                         }                            
                     };
                     */
        //HAGO LA SELECT DE TODOS LOS SNAPSHOTS
       // vertxEventBusService.send('snapshot_actions', {VERTX_ACTION: 'select_all', ID_WORK: sessionStorage.SelectedIdWork, ID_SES:sessionStorage.idSesion, ID_CON: (actionData.setIdCon()).toString()});
        //vertxEventBusService.send('repository_actions', {VERTX_ACTION: 'select_all'});

        console.log("entra en capturectrl");
                  }
});
